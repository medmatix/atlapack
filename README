
		 LAPACK and LAPACKE with GNU Autotools
		 =====================================


Topics
------

  1. Introduction
  2. License
  3. Install
  4. Usage
  A. Credits
  B. Bugs
  C. Resources
  D. How to upgrade to a new LAPACK release
  E. Formatting file lists under GNU Emacs
  F. C Language: handling subscripted arrays


1. Introduction
---------------

LAPACK is a library of Fortran  90 with subroutines for solving the most
commonly  occurring  problems  in   numerical  linear  algebra.   It  is
freely-available software, and is copyrighted.

  This distribution  repackages the  original LAPACK and  LAPACKE source
code under the configuration and  installation framework provided by the
GNU Autotools.  It was last updated with LAPACK 3.5.0.

  ATLAPACK expects a BLAS library to be already installed on the system;
when  no optimised  library is  available, it  is suggested  to use  the
ATBLAS distribution (see Resources below).


2. License
----------

2.1 LAPACK licence
------------------

Copyright (c) 1992-2011  The University of Tennessee  and The University
of Tennessee Research Foundation.  All rights reserved.

Copyright  (c)  2000-2011 The  University  of  California Berkeley.  All
rights reserved.

Copyright (c) 2006-2012  The University of Colorado  Denver.  All rights
reserved.

Redistribution  and use  in source  and  binary forms,  with or  without
modification, are  permitted provided that the  following conditions are
met:

* Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.

* Redistributions  in binary  form  must reproduce  the above  copyright
  notice, this list of conditions and the following disclaimer listed in
  this license in the documentation and/or other materials provided with
  the distribution.

* Neither  the name  of  the  copyright holders  nor  the  names of  its
  contributors may be  used to endorse or promote  products derived from
  this software without specific prior written permission.

  The copyright  holders provide  no reassurances  that the  source code
provided  does  not  infringe  any   patent,  copyright,  or  any  other
intellectual property  rights of  third parties.  The  copyright holders
disclaim  any liability  to  any recipient  for  claims brought  against
recipient  by  any   third  party  for  infringement   of  that  parties
intellectual property rights.

  THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
"AS  IS" AND  ANY  EXPRESS  OR IMPLIED  WARRANTIES,  INCLUDING, BUT  NOT
LIMITED TO, THE IMPLIED WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN  NO EVENT  SHALL THE  COPYRIGHT
OWNER OR  CONTRIBUTORS BE LIABLE  FOR ANY DIRECT,  INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF  SUBSTITUTE GOODS OR SERVICES; LOSS OF  USE, DATA, OR
PROFITS; OR BUSINESS  INTERRUPTION) HOWEVER CAUSED AND ON  ANY THEORY OF
LIABILITY,  WHETHER IN  CONTRACT, STRICT  LIABILITY, OR  TORT (INCLUDING
NEGLIGENCE  OR OTHERWISE)  ARISING IN  ANY WAY  OUT OF  THE USE  OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


2.2 LAPACKE licence
-------------------

Copyright (c) 2011, Intel Corp.
All rights reserved.

Redistribution  and use  in source  and  binary forms,  with or  without
modification, are  permitted provided that the  following conditions are
met:

* Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.

* Redistributions  in binary  form  must reproduce  the above  copyright
  notice, this  list of conditions  and the following disclaimer  in the
  documentation and/or other materials provided with the distribution.

* Neither  the  name   of  Intel  Corporation  nor  the   names  of  its
  contributors may be  used to endorse or promote  products derived from
  this software without specific prior written permission.

  THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
"AS  IS" AND  ANY  EXPRESS  OR IMPLIED  WARRANTIES,  INCLUDING, BUT  NOT
LIMITED TO, THE IMPLIED WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR  PURPOSE ARE  DISCLAIMED.  IN  NO EVENT  SHALL THE  COPYRIGHT
OWNER OR  CONTRIBUTORS BE LIABLE  FOR ANY DIRECT,  INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF  SUBSTITUTE GOODS OR SERVICES; LOSS OF  USE, DATA, OR
PROFITS; OR BUSINESS  INTERRUPTION) HOWEVER CAUSED AND ON  ANY THEORY OF
LIABILITY,  WHETHER IN  CONTRACT, STRICT  LIABILITY, OR  TORT (INCLUDING
NEGLIGENCE  OR OTHERWISE)  ARISING IN  ANY WAY  OUT OF  THE USE  OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


3. Install
----------

From a proper distribution tarball, we can do this, after extracting the
archive:

    $ cd atlapack-0.1.0
    $ mkdir build
    $ cd build

to inspect the available configuration options:

    $ ../configure --help

then do it:

    $ ../configure [options]
    $ make
    $ make check
    $ make install

if we are on a luxury multicore CPU,  we can go wild with the -j option;
for example:

    $ make -j4
    $ make -j4 check

  From  a repository  checkout or  snapshot  (the ones  from the  Github
site): we  must first run the  script "autogen.sh", from the  top source
directory,  to generate  the  needed files;  for this  we  need to  have
installed the GNU Autotools: Automake, Autoconf, Libtool:

    $ cd atlapack
    $ sh autogen.sh

we  should   now  see   the  executable   "configure"  script   and  the
"Makefile.in" file.  From now on everything  is the same as for building
from a proper release tarball, but we have to run the "configure" script
enabling the maintainer mode:

    $ ../configure --enable-maintainer-mode [options]
    $ make
    $ make check
    $ make install

  The  Makefile supports  the  DESTDIR environment  variable to  install
files in a temporary location, example: to see what will happen:

    $ make -n install DESTDIR=/tmp/atlapack

to really do it:

    $ make install DESTDIR=/tmp/atlapack


4. Usage
--------

Read the  documentation.  ATLAPACK installs  manual pages for  both BLAS
and  LAPACK  routines.   Remember  that there  are  documents  available
online:

* Quick reference for BLAS routines:

     <http://www.netlib.org/blas/blasqr.pdf>

* Notes on how to use the CBLAS:

     <http://www.netlib.org/blas/blast-forum/cinterface.pdf>

* The online LAPACK User Guide:

     <http://www.netlib.org/lapack/lug/>

  Some (but not all) of the included  test programs are also meant to be
usage examples, with extensive comments and explanatory output displayed
to stdout.  After running the test  suite with "make check", see the log
files under:

   $(builddir)/tests/


A. Credits
----------

See the copyright  notices for the list of entities  who authored LAPACK
and LAPACKE.  The GNU Autotools integration was written by Marco Maggi.


B. Bugs
-------

Bug reports about  the repackaging are appreciated.   Register issues at
the ATLAPACK issue tracker:

	     <http://github.com/marcomaggi/atlapack/issues>


C. Resources
------------

The GNU Project software can be found here:

			 <http://www.gnu.org/>

BLAS and CBLAS are available at:

		     <http://www.netlib.org/blas/>

but it is suggested to build the shared libraries using ATBLAS:

		 <http://github.com/marcomaggi/atblas/>
	       <http://sourceforge.net/projects/atblas/>

LAPACK is available on Netlib and can be obtained via the World Wide Web
and anonymous ftp:

		    <http://www.netlib.org/lapack/>

the development of this package takes place at:

		<http://github.com/marcomaggi/atlapack/>

and as backup at:

	      <http://sourceforge.net/projects/atlapack/>

the last revision of this package is available from:

	   <http://sourceforge.net/projects/atlapack/files/>

  Always remember that at Netlib's site there are test data, results and
programs for all the routines in LAPACK:

	    <http://www.nag.co.uk/lapack-ex/lapack-ex.html>


D. How to upgrade to a new LAPACK release
-----------------------------------------

It is a good idea to keep  the version of this package synchronised with
the version of the corresponding  LAPACK release.  The version number is
in the file "configure.ac".

  It is  suggested to use a  single "Makefile.am" file, to  make it easy
for  the make  program  to infer  dependencies;  unfortunately, in  this
package there are  ``many'' files, and a single makefile  would hit some
host platform limits on arguments  length.  For this reason this package
makes use of multiple "Makefile.am" files; it is still possible to build
the package with parallel make processes.

  Let's say  the archive  of a new  release of LAPACK  is unpacked  in a
directory "newlapack" and  ATLAPACK is in the  directory "atlapack".  To
upgrade ATLAPACK with the new source files we do:

0.   Create  a   new  branch   in  the   git  repository,   for  example
   "upgrade-to-3.5.0", and check it out.

1. Copy the LAPACK Fortran source files:

    $ cp newlapack/SRC/*.f atlapack/lapack/

   and update the file lists in "atlapack/lapack/Makefile.am".

2. Copy the LAPACK machine dependent files:

    $ cp newlapack/INSTALL/*.f atlapack/lapack/machine-dependent/

   and update the file lists in "atlapack/lapack/Makefile.am".

3. Copy the LAPACKE include files:

    $ cp newlapack/lapacke/include/*.h atlapack/lapacke/src/
    $ mv \
       lapacke/src/lapacke_mangling_with_flags.h \
       lapacke/src/lapacke_mangling.h

   and update the file lists in "atlapack/lapacke/Makefile.am".

4. Copy the LAPACKE source files:

    $ cp newlapack/lapacke/src/*.c atlapack/lapacke/src/

   and update the file lists in "atlapack/lapacke/Makefile.am".

5. Copy the LAPACKE utils source files:

    $ cp newlapack/lapacke/utils/*.c atlapack/lapacke/utils/

   and update the file lists in "atlapack/lapacke/Makefile.am".

6. Copy the MATGEN utils source files:

    $ cp newlapack/TESTING/MATGEN/*.f atlapack/tmglib/

   and update the file lists in "atlapack/tmglib/Makefile.am".

7. Download the archive of manual pages from LAPACK's site and unpack it
   under "atlapack/doc/":

    $ cd atlapack/doc
    $ tar xvzf /path/to/manpages.tgz

   and update the file lists in "atlapack/doc/Makefile.am".

  At last, we can examine the list of new files with:

    $ git status


E. Formatting file lists under GNU Emacs
----------------------------------------

When using GNU Emacs to edit the  Makefile.am, it can be useful to apply
function "my-makefile-reformat-list-of-files" defined in the module:

   meta/emacs/my-makefile.el

it  reformats a  list  of files  allowing the  insertion  of a  pathname
prefix; see its documentation.


F. C Language: handling subscripted arrays
------------------------------------------

When  using  CBLAS and  LAPACKE  we  always  need  to handle  arrays  of
"lapack_int",  "double" and  "lapack_complex_double" elements.   We want
to: define  such arrays for  vectors and bidimensional matrices;  pass a
pointer to  such arrays as  argument to function calls;  write functions
that receive such pointers as arguments.

  To define such an  array for a vector and a matrix  of "double" we can
do:

   void
   func (int N, int M, double * V_, double * A_)
   {
     double (*V)[N]    = (void*)V_;
     double (*A)[M][N] = (void*)A_;
     printf("V[0] = %f\n", (*V)[0]);
     printf("A[0][0]\n",   (*A)[0][0]);
   }
   void
   main (void)
   {
   #undef M
   #undef N
   #define M		3
   #define N		2
     double V[N];
     double A[M][N];
     func(M, N, &V[0], &A[0][0]);
   }

but with the latest versions of the C Language Standard we can also, and
better, do:

   void
   func (int M, int N, double V[N], double A[M][N])
   {
     printf("V[0] = %f\n", V[0]);
     printf("A[0][0]\n",   A[0][0]);
   }
   void
   main (void)
   {
     int M = ...;
     int N = ...;
     double V[N];
     double A[M][N];
     func(M, N, V, A);
   }

  The latter solution is the one adopted in some of the distributed test
programs; consequently,  such files can  be processed only  by compilers
supporting the  latest C  Language Standard.  The  GNU C  Compiler works
fine.


### end of file
# Local Variables:
# mode: text
# coding: utf-8-unix
# fill-column: 72
# paragraph-start: "*"
# End:
